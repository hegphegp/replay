<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bazinga.replay.dao.StockIndexDAO">

    <resultMap id="BaseResultMap" type="com.bazinga.replay.model.StockIndex">
        <id column="id" jdbcType="BIGINT"  property="id" />
        <result column="stock_code" jdbcType="VARCHAR" property="stockCode"/>
        <result column="stock_name" jdbcType="VARCHAR" property="stockName"/>
        <result column="kbar_date" jdbcType="VARCHAR" property="kbarDate"/>
        <result column="unique_key" jdbcType="VARCHAR" property="uniqueKey"/>
        <result column="macd" jdbcType="DECIMAL" property="macd"/>
        <result column="diff" jdbcType="DECIMAL" property="diff"/>
        <result column="dea" jdbcType="DECIMAL" property="dea"/>
        <result column="bias6" jdbcType="DECIMAL" property="bias6"/>
        <result column="bias12" jdbcType="DECIMAL" property="bias12"/>
        <result column="bias24" jdbcType="DECIMAL" property="bias24"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>


    <sql id="Base_Column_List">
        id,
            stock_code,
            stock_name,
            kbar_date,
            unique_key,
            macd,
            diff,
            dea,
            bias6,
            bias12,
            bias24,
            create_time,
            update_time
        </sql>


    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_index
        where id = #{id}
    </select>


    <select id="selectByUniqueKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_index
        where unique_key = #{uniqueKey} limit 1
    </select>

    <update id="updateByUniqueKey" parameterType="com.bazinga.replay.model.StockIndex">
        update stock_index
        <set>
        <if test="stockCode != null">
            stock_code = #{stockCode, jdbcType=VARCHAR},
        </if>
        <if test="stockName != null">
            stock_name = #{stockName, jdbcType=VARCHAR},
        </if>
        <if test="kbarDate != null">
            kbar_date = #{kbarDate, jdbcType=VARCHAR},
        </if>
        <if test="macd != null">
            macd = #{macd, jdbcType=DECIMAL},
        </if>
        <if test="diff != null">
            diff = #{diff, jdbcType=DECIMAL},
        </if>
        <if test="dea != null">
            dea = #{dea, jdbcType=DECIMAL},
        </if>
        <if test="bias6 != null">
            bias6 = #{bias6, jdbcType=DECIMAL},
        </if>
        <if test="bias12 != null">
            bias12 = #{bias12, jdbcType=DECIMAL},
        </if>
        <if test="bias24 != null">
            bias24 = #{bias24, jdbcType=DECIMAL},
        </if>
        <if test="createTime != null">
            create_time = #{createTime, jdbcType=TIMESTAMP},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime, jdbcType=TIMESTAMP},
        </if>
        </set>
        where unique_key = #{uniqueKey} limit 1
    </update>
    <insert id="insert" parameterType="com.bazinga.replay.model.StockIndex" useGeneratedKeys="true" keyProperty="id">
        insert into stock_index (<include refid="Base_Column_List" />)
        values(
        #{id, jdbcType=BIGINT},
            #{stockCode, jdbcType=VARCHAR},
            #{stockName, jdbcType=VARCHAR},
            #{kbarDate, jdbcType=VARCHAR},
            #{uniqueKey, jdbcType=VARCHAR},
            #{macd, jdbcType=DECIMAL},
            #{diff, jdbcType=DECIMAL},
            #{dea, jdbcType=DECIMAL},
            #{bias6, jdbcType=DECIMAL},
            #{bias12, jdbcType=DECIMAL},
            #{bias24, jdbcType=DECIMAL},
            #{createTime, jdbcType=TIMESTAMP},
            #{updateTime, jdbcType=TIMESTAMP}
            )
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.bazinga.replay.model.StockIndex">
        update stock_index
        <set>
            <if test="stockCode != null">
                stock_code = #{stockCode, jdbcType=VARCHAR},
            </if>
            <if test="stockName != null">
                stock_name = #{stockName, jdbcType=VARCHAR},
            </if>
            <if test="kbarDate != null">
                kbar_date = #{kbarDate, jdbcType=VARCHAR},
            </if>
            <if test="uniqueKey != null">
                unique_key = #{uniqueKey, jdbcType=VARCHAR},
            </if>
            <if test="macd != null">
                macd = #{macd, jdbcType=DECIMAL},
            </if>
            <if test="diff != null">
                diff = #{diff, jdbcType=DECIMAL},
            </if>
            <if test="dea != null">
                dea = #{dea, jdbcType=DECIMAL},
            </if>
            <if test="bias6 != null">
                bias6 = #{bias6, jdbcType=DECIMAL},
            </if>
            <if test="bias12 != null">
                bias12 = #{bias12, jdbcType=DECIMAL},
            </if>
            <if test="bias24 != null">
                bias24 = #{bias24, jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id} limit 1
    </update>

    <sql id="Equal_Where_List">
        <if test="stockCode != null">
            and stock_code = #{stockCode, jdbcType=VARCHAR}
        </if>
        <if test="stockName != null">
            and stock_name = #{stockName, jdbcType=VARCHAR}
        </if>
        <if test="kbarDate != null">
            and kbar_date = #{kbarDate, jdbcType=VARCHAR}
        </if>
        <if test="uniqueKey != null">
            and unique_key = #{uniqueKey, jdbcType=VARCHAR}
        </if>
        <if test="macd != null">
            and macd = #{macd, jdbcType=DECIMAL}
        </if>
        <if test="diff != null">
            and diff = #{diff, jdbcType=DECIMAL}
        </if>
        <if test="dea != null">
            and dea = #{dea, jdbcType=DECIMAL}
        </if>
        <if test="bias6 != null">
            and bias6 = #{bias6, jdbcType=DECIMAL}
        </if>
        <if test="bias12 != null">
            and bias12 = #{bias12, jdbcType=DECIMAL}
        </if>
        <if test="bias24 != null">
            and bias24 = #{bias24, jdbcType=DECIMAL}
        </if>
    </sql>

    <sql id="Range_Where_List">
        <if test="kbarDateFrom != null">
            <![CDATA[
            and kbar_date >= #{kbarDateFrom, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="kbarDateTo != null">
            <![CDATA[
            and kbar_date <= #{kbarDateTo, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="createTimeFrom != null">
            <![CDATA[
            and create_time >= #{createTimeFrom, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="createTimeTo != null">
            <![CDATA[
            and create_time <= #{createTimeTo, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="updateTimeFrom != null">
            <![CDATA[
            and update_time >= #{updateTimeFrom, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="updateTimeTo != null">
            <![CDATA[
            and update_time <= #{updateTimeTo, jdbcType=TIMESTAMP}
            ]]>
        </if>
    </sql>

    <sql id="GtLastMaxId_Where">
        <if test="lastMaxId != null and lastMaxId > 0">
            and id > #{lastMaxId}
        </if>
    </sql>

    <sql id="Order_By">
        <if test="sorts != null and sorts.size > 0">
            ORDER BY
            <foreach collection="sorts" item="sortItem" separator=",">
                ${sortItem.column} ${sortItem.type.message}
            </foreach>
        </if>
    </sql>

    <select id="selectByCondition" parameterType="com.bazinga.replay.query.StockIndexQuery" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from stock_index
        <where>
            <include refid="Equal_Where_List"/>
            <include refid="Range_Where_List"/>
            <include refid="GtLastMaxId_Where" />
        </where>
        <include refid="Order_By"/>
        <if test="limit > 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="countByCondition" parameterType="com.bazinga.replay.query.StockIndexQuery" resultType="java.lang.Integer">
        select count(1)
        from stock_index
        <where>
            <include refid="Equal_Where_List"/>
            <include refid="Range_Where_List"/>
        </where>
    </select>


</mapper>